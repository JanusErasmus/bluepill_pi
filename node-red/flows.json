[{"id":"8b018ca7.0446f","type":"subflow","name":"Handle Fermenter","info":"Decides if the message should be telegrammed","category":"","in":[{"x":280,"y":240,"wires":[{"id":"198e5d71.d4da43"}]}],"out":[{"x":720,"y":280,"wires":[{"id":"198e5d71.d4da43","port":4},{"id":"198e5d71.d4da43","port":3},{"id":"198e5d71.d4da43","port":2},{"id":"198e5d71.d4da43","port":1},{"id":"198e5d71.d4da43","port":5}]}]},{"id":"4c92bf5d.10cea","type":"function","z":"8b018ca7.0446f","name":"Make Fermenter message","func":"upTime = msg.payload.uptime / 60000;\ntemp = msg.payload.temperature / 1000;\nonboard = msg.payload.voltages[0] / 1000;\ntemp0 = msg.payload.voltages[1] / 1000;\ntemp1 = msg.payload.voltages[2] / 1000;\nsetpoint = msg.payload.voltages[3] / 1000;\n\ncooler = \"OFF\";\nif(msg.payload.outputs === 1)\n    cooler = \"ON\"\n    \nfunction minutesToString(minFloat)\n{\n    now = minFloat * 60;\n\tif(now < 60)\n\t{\n\t\treturn  Math.round(now) + \"s\";\n\t}\n\telse\n\t{\n\t\tmin = now / 60;\n\t\tnow %= 60;\n\t\tif(min < 60)\n\t\t{\n\t\t\treturn Math.round(min) + \"m \" + Math.round(now) + \"s\";\n\t\t}\n\t\telse\n\t\t{\n\t\t\thour = min / 60;\n\t\t\tmin %= 60;\n\t\t\tif(hour < 24)\n\t\t\t{\n\t\t\t\treturn Math.round(hour) + \"h \" + Math.round(min) + \"m \" + Math.round(min) + \"s\";\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tday = hour / 24;\n\t\t\t\thour %= 24;\n\t\t\t\treturn Math.round(day) + \"d\" + Math.round(hour) + \"h\" + Math.round(min) + \"m\" + Math.round(now) + \"s\";\n\t\t\t}\n\t\t}\n\t}\n}\n\nupTime = minutesToString(upTime);\n\nmsg.payload = \"*Fermenter*\" +\n              \"\\nUp time: \" + upTime + \n              \"\\nCooler: \" + cooler + \n              \"\\nCPU: \" + temp.toFixed(2) + \" C\" +\n              //\"\\nonboard: \" + onboard.toFixed(2) + \" C\" +\n              \"\\nsetpoint: \" + setpoint.toFixed(2) + \" C\" +\n              \"\\ntemp0: \" + temp0.toFixed(2) + \" C\" +\n              \"\\ntemp1: \" + temp1.toFixed(2) + \" C\"\n\nreturn msg;","outputs":1,"noerr":0,"x":730,"y":180,"wires":[["ce3956f4.562218"]]},{"id":"ce3956f4.562218","type":"subflow:acf214e0.5d8368","z":"8b018ca7.0446f","name":"","x":970,"y":180,"wires":[]},{"id":"198e5d71.d4da43","type":"function","z":"8b018ca7.0446f","name":"","func":"cooler = msg.payload.temperature / 1000\nif(msg.payload.outputs === 1)\n{\n    cooler = (msg.payload.voltages[3] / 1000 - 5)\n}\n\ngraph0 = {}\ngraph0.topic = \"onboard\";\ngraph0.payload = msg.payload.voltages[0] / 1000;\n\ngraph1 = {}\ngraph1.topic = \"temp0\";\ngraph1.payload = msg.payload.voltages[1] / 1000;\n\ngraph4 = {}\ngraph4.topic = \"temp1\";\ngraph4.payload = msg.payload.voltages[2] / 1000;\n\ngraph2 = {}\ngraph2.topic = \"cpu\";\ngraph2.payload = msg.payload.temperature / 1000;\n\ngraph3 = {}\ngraph3.topic = \"setpoint\";\ngraph3.payload = msg.payload.voltages[3] / 1000;\n\ngraph5 = {}\ngraph5.topic = \"cooler\";\ngraph5.payload = cooler;\n\n//Do not send anything, just log\nif(global.get(\"requestedFermenter\") === false)\n{\n   msg =  null;\n}\n\nglobal.set(\"requestedFermenter\", false)\nreturn [msg,  graph1, graph2, graph3, graph4, graph5];","outputs":6,"noerr":0,"x":440,"y":240,"wires":[["4c92bf5d.10cea"],[],[],[],[],[]]},{"id":"acf214e0.5d8368","type":"subflow","name":"TX Telegram","info":"","category":"","in":[{"x":540,"y":160,"wires":[{"id":"de6aedb9.d1f99"}]}],"out":[]},{"id":"b92887c0.dc0648","type":"telegram sender","z":"acf214e0.5d8368","name":"JanusVPS","bot":"2f4e5a55.3805d6","x":970,"y":160,"wires":[[]]},{"id":"de6aedb9.d1f99","type":"function","z":"acf214e0.5d8368","name":"Prepare message","func":"content = msg.payload\n\nmsg.payload = {}\nmsg.payload.chatId =  global.get(\"chatId\");\nmsg.payload.type = \"message\"\nmsg.payload.options = {\"parse_mode\":\"Markdown\"}\nmsg.payload.content = content\n\n\nreturn msg;","outputs":1,"noerr":0,"x":730,"y":160,"wires":[["b92887c0.dc0648"]]},{"id":"2f4e5a55.3805d6","type":"telegram bot","z":"","botname":"janus_vps_bot","usernames":"janus_erasmus","chatids":"","baseapiurl":"","pollinterval":"300"},{"id":"1413c39b.1b391c","type":"subflow","name":"Handle Gates","info":"Handle gate states and messages","category":"","in":[{"x":320,"y":360,"wires":[{"id":"c45f4e32.2efe8"},{"id":"d25ce82e.8ae918"}]}],"out":[]},{"id":"f24c4347.e5cf7","type":"ui_chart","z":"1413c39b.1b391c","name":"","group":"a7800071.8aa72","order":0,"width":"6","height":"6","label":"State vs Time","chartType":"line","legend":"false","xformat":"HH:mm:ss","interpolate":"step","nodata":"","dot":true,"ymin":"0","ymax":"1.5","removeOlder":"8","removeOlderPoints":"","removeOlderUnit":"3600","cutout":0,"useOneColor":false,"colors":["#1f77b4","#aec7e8","#ff7f0e","#2ca02c","#98df8a","#d62728","#ff9896","#9467bd","#c5b0d5"],"useOldStyle":false,"x":980,"y":180,"wires":[[],[]]},{"id":"c45f4e32.2efe8","type":"function","z":"1413c39b.1b391c","name":"State to values","func":"function gateStateToNumber (state){\n    switch(state)\n    {\n        case 1:\n            return 0;\n        case 2:\n            return 1;\n        case 3:\n        case 4:\n            return 0.5;\n        case 5:\n        case 6:\n        case 7:\n        case 8:\n            return -1;\n        default:\n            return -1;\n            \n    }\n}\n\nstreetState = msg.payload.voltages[1];\nhouseState = msg.payload.voltages[0];\n\nstreet = {}\nstreet.series = \"Street\"\nstreet.label = \"Street\"\nstreet.payload = gateStateToNumber(streetState)\n\nhouse = {}\nhouse.series = \"House\"\nhouse.label = \"House\"\nhouse.payload = gateStateToNumber(houseState)\n\nreturn [street, house];","outputs":2,"noerr":0,"x":620,"y":180,"wires":[["f24c4347.e5cf7"],["f24c4347.e5cf7"]]},{"id":"e17bd7a5.b13ca8","type":"subflow:acf214e0.5d8368","z":"1413c39b.1b391c","name":"","x":1130,"y":340,"wires":[]},{"id":"e79e4ce3.1b032","type":"function","z":"1413c39b.1b391c","name":"Fill Gate message","func":"upTime = msg.payload.uptime / 60000;\ntemp = msg.payload.temperature / 1000;\n\nif(msg.payload.node === \"0\")\n{\n    temp -= 15;\n}\nif(msg.payload.node === \"1\")\n{\n    temp -= 12;\n}\n\n\nfunction gateStateToString (state){\n    switch(state)\n    {\n        default:\n            return \"Unknown\";\n        case 1:\n            return \"Closed\";\n        case 2:\n            return \"Open\";\n        case 3:\n            return \"Opening\";\n        case 4:\n            return \"Closing\";\n        case 5:\n            return \"Courtesy ON\";\n        case 6:\n            return \"Power Failure\";\n        case 7:\n            return \"Battery low\";\n        case 8:\n            return \"Obstruction\";\n            \n    }\n}\n\nstreetGate = gateStateToString(msg.payload.voltages[1]);\nhouseGate = gateStateToString(msg.payload.voltages[0]);\n\nfunction minutesToString(minFloat)\n{\n    now = minFloat * 60;\n\tif(now < 60)\n\t{\n\t\treturn Math.round(now) + \"s\";\n\t}\n\telse\n\t{\n\t\tmin = now / 60;\n\t\tnow %= 60;\n\t\tif(min < 60)\n\t\t{\n\t\t\treturn Math.round(min) + \"m \" + Math.round(now) + \"s\";\n\t\t}\n\t\telse\n\t\t{\n\t\t\thour = min / 60;\n\t\t\tmin %= 60;\n\t\t\tif(hour < 24)\n\t\t\t{\n\t\t\t\treturn Math.round(hour) + \"h \" + Math.round(min) + \"m \" + Math.round(now) + \"s\";\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tday = hour / 24;\n\t\t\t\thour %= 24;\n\t\t\t\treturn Math.round(day) + \"d\" + Math.round(hour) + \"h\" + Math.round(min) + \"m\" + Math.round(now) + \"s\";\n\t\t\t}\n\t\t}\n\t}\n}\n\nupTime = minutesToString(upTime);\n\nmsg.payload = \"*Gates*\" + \n                        \"\\nStreet: \" + streetGate +\n                        \"\\nHouse: \" + houseGate +\n                        \"\\nUp time: \" + upTime + \n                        \"\\ntemp: \" + temp.toFixed(2)\nreturn msg;","outputs":1,"noerr":0,"x":930,"y":300,"wires":[["e17bd7a5.b13ca8"]]},{"id":"d25ce82e.8ae918","type":"function","z":"1413c39b.1b391c","name":"Gate access","func":"streetGate = msg.payload.voltages[1];\nhouseGate  = msg.payload.voltages[0];\n\nfunction gateStateToString (state){\n    switch(state)\n    {\n        default:\n            return \"Unknown\";\n        case 1:\n            return \"Closed\";\n        case 2:\n            return \"Open\";\n        case 3:\n            return \"Opening\";\n        case 4:\n            return \"Closing\";\n        case 5:\n            return \"Courtesy ON\";\n        case 6:\n            return \"Power Failure\";\n        case 7:\n            return \"Battery low\";\n        case 8:\n            return \"Obstruction\";\n            \n    }\n}\n\nsend_node = null\nsend_message = null\nsend_delay = null\n\nfunction gateMoved(state)\n{\n    switch(state)\n    {\n        default: //Unknown\n        case 1: //Closed\"\n        case 5: //Courtesy ON\n        case 6: //Power Failure\n        case 7: //Battery low\n        case 8: //Obstruction\n            return false;\n        case 2: //Open\n        case 3: //Opening\n        case 4: //Closing\n            return true;\n    }\n}\n\n//when the gates started to move set access flag\nif(gateMoved(streetGate))\n    flow.set(\"streetAccess\", true)\n    \nif(gateMoved(houseGate))\n    flow.set(\"houseAccess\", true)\n    \n//when only street gate opened and closed\nif((streetGate === 1) && \n    (flow.get(\"streetAccess\") === true) &&\n    (flow.get(\"houseAccess\") === false))\n{\n    send_message = {}\n    send_message.payload = \"Street gate accessed\";\n    flow.set(\"streetAccess\", false)\n}\n    \n//when only house gate opened and closed\nif((houseGate === 1) &&\n    (flow.get(\"houseAccess\") === true) &&\n    (flow.get(\"streetAccess\") === false))\n{\n    send_message = {}\n    send_message.payload = \"House gate accessed\";\n    flow.set(\"houseAccess\", false)\n}\n\n//when both gates closed after access\nif((houseGate === 1) &&\n    (streetGate === 1) &&\n    (flow.get(\"streetAccess\") === true) &&\n    (flow.get(\"houseAccess\") === true))\n{\n    send_message = {}\n    send_message.payload = \"Gates accessed\";\n    flow.set(\"streetAccess\", false)\n    flow.set(\"houseAccess\", false)\n}\n\n//prepare delayed message to send when gates are left open\nif(streetGate === 2)\n{\n    send_delay = {}\n    send_delay.payload = \"Street gate left open\";\n}\n\nif(houseGate === 2)\n{\n    send_delay = {}\n    send_delay.payload = \"House gate left open\";\n}\n\n//reset delay when both gates closed\nif((streetGate === 1) && (houseGate === 1))\n{\n    send_delay = {}\n    send_delay.reset = 1;\n}\n\nif(global.get(\"requested\") === true)\n{\n   send_node = JSON.parse(JSON.stringify(msg));\n}\n\nglobal.set(\"requested\", false)\n\nreturn [send_node, send_message, send_delay] ;","outputs":3,"noerr":0,"x":590,"y":340,"wires":[["e79e4ce3.1b032"],["e17bd7a5.b13ca8"],["86af6839.338d28"]]},{"id":"fab5cb60.2ce638","type":"inject","z":"1413c39b.1b391c","name":"Both closed","topic":"","payload":"{\"voltages\":[1,1,0,0]}","payloadType":"json","repeat":"","crontab":"","once":false,"onceDelay":0.1,"x":150,"y":140,"wires":[[]]},{"id":"30ac6633.58bc1a","type":"inject","z":"1413c39b.1b391c","name":"House opening","topic":"","payload":"{\"voltages\":[3,1,0,0]}","payloadType":"json","repeat":"","crontab":"","once":false,"onceDelay":0.1,"x":160,"y":220,"wires":[[]]},{"id":"85644e2d.37fa4","type":"inject","z":"1413c39b.1b391c","name":"House open","topic":"","payload":"{\"voltages\":[2,1,0,0]}","payloadType":"json","repeat":"","crontab":"","once":false,"onceDelay":0.1,"x":150,"y":280,"wires":[[]]},{"id":"50c655f1.9a253c","type":"inject","z":"1413c39b.1b391c","name":"House Closing","topic":"","payload":"{\"voltages\":[4,1,0,0]}","payloadType":"json","repeat":"","crontab":"","once":false,"onceDelay":0.1,"x":160,"y":340,"wires":[[]]},{"id":"c745adfd.3514f","type":"inject","z":"1413c39b.1b391c","name":"Street opening","topic":"","payload":"{\"voltages\":[1,3,0,0]}","payloadType":"json","repeat":"","crontab":"","once":false,"onceDelay":0.1,"x":160,"y":400,"wires":[[]]},{"id":"8be155b3.da6868","type":"inject","z":"1413c39b.1b391c","name":"Street open","topic":"","payload":"{\"voltages\":[1,2,0,0]}","payloadType":"json","repeat":"","crontab":"","once":false,"onceDelay":0.1,"x":150,"y":460,"wires":[[]]},{"id":"64b2e2c3.62eeac","type":"inject","z":"1413c39b.1b391c","name":"Street Closing","topic":"","payload":"{\"voltages\":[1,4,0,0]}","payloadType":"json","repeat":"","crontab":"","once":false,"onceDelay":0.1,"x":150,"y":520,"wires":[[]]},{"id":"86af6839.338d28","type":"delay","z":"1413c39b.1b391c","name":"","pauseType":"delay","timeout":"180","timeoutUnits":"seconds","rate":"1","nbRateUnits":"1","rateUnits":"second","randomFirst":"1","randomLast":"5","randomUnits":"seconds","drop":false,"x":930,"y":380,"wires":[["e17bd7a5.b13ca8"]]},{"id":"a7800071.8aa72","type":"ui_group","z":"","name":"Home Gates","tab":"1c979d26.9d96c3","order":2,"disp":true,"width":"6","collapse":false},{"id":"1c979d26.9d96c3","type":"ui_tab","z":"","name":"Erasmus Home","icon":"dashboard"},{"id":"8e3dae77.2b0e1","type":"tab","label":"Janus","disabled":false,"info":""},{"id":"f3ed241f.996fa8","type":"mqtt in","z":"8e3dae77.2b0e1","name":"","topic":"/node/up/+","qos":"2","broker":"4a731906.628d48","x":120,"y":340,"wires":[["deecbbf2.74ffb8","a90c6a26.868bb8"]]},{"id":"b76775bd.27e518","type":"debug","z":"8e3dae77.2b0e1","name":"JSON","active":false,"tosidebar":true,"console":false,"tostatus":false,"complete":"payload","x":490,"y":260,"wires":[]},{"id":"deecbbf2.74ffb8","type":"function","z":"8e3dae77.2b0e1","name":"parseString","func":"msg.payload = JSON.parse(msg.payload);\n\nif(msg.payload.uptime < 0){\n    msg.payload.uptime = (-1*msg.payload.uptime) + 2147483648\n}\n\nmsg.payload.node = msg.topic.split('/')[3]\nreturn msg;","outputs":1,"noerr":0,"x":310,"y":340,"wires":[["b76775bd.27e518","cf1b1e9a.65ffb"]]},{"id":"cf1b1e9a.65ffb","type":"switch","z":"8e3dae77.2b0e1","name":"Nodes","property":"payload.node","propertyType":"msg","rules":[{"t":"eq","v":"0","vt":"str"},{"t":"eq","v":"1","vt":"str"},{"t":"eq","v":"2","vt":"str"},{"t":"eq","v":"3","vt":"str"},{"t":"else"}],"checkall":"true","repair":false,"outputs":5,"x":490,"y":340,"wires":[["a2566aff.511318"],["67d944e6.9e618c"],["89bf197a.c847f8"],["3c7b3272.8f1d2e"],["37913740.4d89c8"]]},{"id":"67d944e6.9e618c","type":"function","z":"8e3dae77.2b0e1","name":"Make UPS message","func":"upTime = msg.payload.uptime / 60000;\ntemp = msg.payload.temperature / 1000;\nvoltage = msg.payload.voltages[0] / 1000;\ncurrent = (msg.payload.voltages[1] - 32768) / 1000;\n\nfunction minutesToString(minFloat)\n{\n    now = minFloat * 60;\n\tif(now < 60)\n\t{\n\t\treturn  Math.round(now) + \"s\";\n\t}\n\telse\n\t{\n\t\tmin = now / 60;\n\t\tnow %= 60;\n\t\tif(min < 60)\n\t\t{\n\t\t\treturn Math.round(min) + \"m \" + Math.round(now) + \"s\";\n\t\t}\n\t\telse\n\t\t{\n\t\t\thour = min / 60;\n\t\t\tmin %= 60;\n\t\t\tif(hour < 24)\n\t\t\t{\n\t\t\t\treturn Math.round(hour) + \"h \" + Math.round(min) + \"m \" + Math.round(min) + \"s\";\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tday = hour / 24;\n\t\t\t\thour %= 24;\n\t\t\t\treturn Math.round(day) + \"d\" + Math.round(hour) + \"h\" + Math.round(min) + \"m\" + Math.round(now) + \"s\";\n\t\t\t}\n\t\t}\n\t}\n}\n\nupTime = minutesToString(upTime);\n\nmsg.payload = \"*UPS*\" +\n              \"\\nUp time: \" + upTime + \n              \"\\ntemp: \" + temp.toFixed(2) + \" C\" +\n              \"\\nVoltage: \" + voltage.toFixed(2) + \" V\" +\n              \"\\nCurrent: \" + current.toFixed(3) + \" A\"\n\nreturn msg;","outputs":1,"noerr":0,"x":900,"y":300,"wires":[["9f764455.ac1488"]]},{"id":"37913740.4d89c8","type":"function","z":"8e3dae77.2b0e1","name":"Make default message","func":"upTime = msg.payload.uptime / 60000;\ntemp = msg.payload.temperature / 1000;\n\nfunction minutesToString(minFloat)\n{\n    now = minFloat * 60;\n\tif(now < 60)\n\t{\n\t\treturn  Math.round(now) + \"s\";\n\t}\n\telse\n\t{\n\t\tmin = now / 60;\n\t\tnow %= 60;\n\t\tif(min < 60)\n\t\t{\n\t\t\treturn Math.round(min) + \"m \" + Math.round(now) + \"s\";\n\t\t}\n\t\telse\n\t\t{\n\t\t\thour = min / 60;\n\t\t\tmin %= 60;\n\t\t\tif(hour < 24)\n\t\t\t{\n\t\t\t\treturn Math.round(hour) + \"h \" + Math.round(min) + \"m \" + Math.round(now) + \"s\";\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tday = hour / 24;\n\t\t\t\thour %= 24;\n\t\t\t\treturn Math.round(day) + \"d\" + Math.round(hour) + \"h\" + Math.round(min) + \"m\" + Math.round(now) + \"s\";\n\t\t\t}\n\t\t}\n\t}\n}\n\nupTime = minutesToString(upTime);\n\nmsg.payload = \"*Node:*\" + msg.payload.node +\n              \"\\nUp time: \" + upTime + \n              \"\\ntemp: \" + temp.toFixed(2)\n\nreturn msg;","outputs":1,"noerr":0,"x":900,"y":380,"wires":[["9f764455.ac1488"]]},{"id":"736a10fe.6407","type":"mqtt in","z":"8e3dae77.2b0e1","name":"","topic":"/pi","qos":"0","broker":"4a731906.628d48","x":130,"y":580,"wires":[["1ec8e3ef.7eebfc","edfb7fdf.83d28"]]},{"id":"1ec8e3ef.7eebfc","type":"debug","z":"8e3dae77.2b0e1","name":"Pi status","active":false,"tosidebar":true,"console":false,"tostatus":false,"complete":"payload","x":400,"y":560,"wires":[]},{"id":"edfb7fdf.83d28","type":"function","z":"8e3dae77.2b0e1","name":"Prepare message","func":"content = \"Raspberry pi is:\" + msg.payload\n\nmsg.payload = {}\nmsg.payload.chatId =  global.get(\"chatId\");\nmsg.payload.type = \"message\"\nmsg.payload.options = {\"parse_mode\":\"Markdown\"}\nmsg.payload.content = content\n\n\nreturn msg;","outputs":1,"noerr":0,"x":410,"y":640,"wires":[["f8d5fa85.f52ab8"]]},{"id":"a2566aff.511318","type":"subflow:1413c39b.1b391c","z":"8e3dae77.2b0e1","name":"HandleGate","x":890,"y":220,"wires":[]},{"id":"f8d5fa85.f52ab8","type":"telegram sender","z":"8e3dae77.2b0e1","name":"JanusVPS","bot":"2f4e5a55.3805d6","x":670,"y":640,"wires":[[]]},{"id":"9f764455.ac1488","type":"subflow:acf214e0.5d8368","z":"8e3dae77.2b0e1","name":"","x":1160,"y":320,"wires":[]},{"id":"a90c6a26.868bb8","type":"debug","z":"8e3dae77.2b0e1","name":"string","active":true,"tosidebar":true,"console":false,"tostatus":false,"complete":"payload","x":270,"y":260,"wires":[]},{"id":"89bf197a.c847f8","type":"function","z":"8e3dae77.2b0e1","name":"Make 12V UPS message","func":"upTime = msg.payload.uptime / 60000;\ntemp = msg.payload.temperature / 1000;\nvoltage = msg.payload.voltages[0] / 1000;\ncurrent = (msg.payload.voltages[1] - 32768) / 1000;\nmains = \"OK\";\nif(msg.payload.inputs === 0)\n    mains = \"Failure\";\n    \nfunction minutesToString(minFloat)\n{\n    now = minFloat * 60;\n\tif(now < 60)\n\t{\n\t\treturn  Math.round(now) + \"s\";\n\t}\n\telse\n\t{\n\t\tmin = now / 60;\n\t\tnow %= 60;\n\t\tif(min < 60)\n\t\t{\n\t\t\treturn Math.round(min) + \"m \" + Math.round(now) + \"s\";\n\t\t}\n\t\telse\n\t\t{\n\t\t\thour = min / 60;\n\t\t\tmin %= 60;\n\t\t\tif(hour < 24)\n\t\t\t{\n\t\t\t\treturn Math.round(hour) + \"h \" + Math.round(min) + \"m \" + Math.round(min) + \"s\";\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tday = hour / 24;\n\t\t\t\thour %= 24;\n\t\t\t\treturn Math.round(day) + \"d\" + Math.round(hour) + \"h\" + Math.round(min) + \"m\" + Math.round(now) + \"s\";\n\t\t\t}\n\t\t}\n\t}\n}\n\nupTime = minutesToString(upTime);\n\nmsg.payload = \"*12V UPS*\" +\n              \"\\nUp time: \" + upTime + \n              \"\\ntemp: \" + temp.toFixed(2) + \" C\" +\n              \"\\nMains: \" + mains +\n              \"\\nVoltage: \" + voltage.toFixed(2) + \" V\" +\n              \"\\nCurrent: \" + current.toFixed(3) + \" A\"\n\nreturn msg;","outputs":1,"noerr":0,"x":910,"y":340,"wires":[["9f764455.ac1488"]]},{"id":"3c7b3272.8f1d2e","type":"subflow:8b018ca7.0446f","z":"8e3dae77.2b0e1","name":"","x":890,"y":460,"wires":[["7f376406.3f198c"]]},{"id":"7f376406.3f198c","type":"ui_chart","z":"8e3dae77.2b0e1","name":"","group":"4ea561d5.be067","order":0,"width":"6","height":"6","label":"Fermenter Chamber","chartType":"line","legend":"false","xformat":"HH:mm:ss","interpolate":"linear","nodata":"","dot":false,"ymin":"10","ymax":"40","removeOlder":"12","removeOlderPoints":"","removeOlderUnit":"3600","cutout":0,"useOneColor":false,"colors":["#1f77b4","#aec7e8","#ff7f0e","#2ca02c","#98df8a","#d62728","#ff9896","#9467bd","#c5b0d5"],"useOldStyle":false,"x":1140,"y":500,"wires":[[],[]]},{"id":"9cfe8407.2b1dc8","type":"inject","z":"8e3dae77.2b0e1","name":"","topic":"","payload":"[]","payloadType":"json","repeat":"","crontab":"","once":false,"onceDelay":0.1,"x":890,"y":520,"wires":[["7f376406.3f198c"]]},{"id":"4a731906.628d48","type":"mqtt-broker","z":"","name":"","broker":"localhost","port":"1883","clientid":"JanusVPS","usetls":false,"compatmode":true,"keepalive":"60","cleansession":true,"birthTopic":"","birthQos":"0","birthPayload":"","closeTopic":"","closeQos":"0","closePayload":"","willTopic":"","willQos":"0","willPayload":""},{"id":"4ea561d5.be067","type":"ui_group","z":"","name":"Fermenter","tab":"1c979d26.9d96c3","order":1,"disp":true,"width":"6","collapse":false}]
